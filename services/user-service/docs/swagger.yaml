basePath: /
definitions:
  internal_handler.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  ua_services_user-service_internal_service.Achievement:
    properties:
      description:
        type: string
      icon:
        type: string
      id:
        type: string
      name:
        type: string
      unlocked_at:
        type: string
    type: object
  ua_services_user-service_internal_service.AchievementsResponse:
    properties:
      achievements:
        items:
          $ref: '#/definitions/ua_services_user-service_internal_service.Achievement'
        type: array
    type: object
  ua_services_user-service_internal_service.ChangePasswordRequest:
    properties:
      current_password:
        type: string
      new_password:
        minLength: 6
        type: string
    required:
    - current_password
    - new_password
    type: object
  ua_services_user-service_internal_service.LoginRequest:
    properties:
      identifier:
        description: username or email
        type: string
      password:
        type: string
    required:
    - identifier
    - password
    type: object
  ua_services_user-service_internal_service.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/ua_services_user-service_internal_service.UserProfile'
    type: object
  ua_services_user-service_internal_service.RefreshTokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  ua_services_user-service_internal_service.RegisterRequest:
    properties:
      display_name:
        maxLength: 50
        minLength: 2
        type: string
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - display_name
    - email
    - password
    - username
    type: object
  ua_services_user-service_internal_service.RegisterResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/ua_services_user-service_internal_service.UserProfile'
    type: object
  ua_services_user-service_internal_service.UpdateProfileRequest:
    properties:
      avatar_url:
        type: string
      display_name:
        type: string
    type: object
  ua_services_user-service_internal_service.UserProfile:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      display_name:
        type: string
      email:
        type: string
      experience:
        type: integer
      id:
        type: string
      level:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  ua_services_user-service_internal_service.UserProfileResponse:
    properties:
      user:
        $ref: '#/definitions/ua_services_user-service_internal_service.UserProfile'
    type: object
  ua_services_user-service_internal_service.UserStats:
    properties:
      best_rank:
        type: integer
      current_rank:
        type: integer
      games_lost:
        type: integer
      games_played:
        type: integer
      games_won:
        type: integer
      total_game_time:
        type: integer
      win_rate:
        type: number
    type: object
  ua_services_user-service_internal_service.UserStatsResponse:
    properties:
      stats:
        $ref: '#/definitions/ua_services_user-service_internal_service.UserStats'
      user:
        $ref: '#/definitions/ua_services_user-service_internal_service.UserProfile'
    type: object
  utils.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8002
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: User management microservice for UA Card Battle Game
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: UA User Service API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return tokens
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/ua_services_user-service_internal_service.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/ua_services_user-service_internal_service.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Login user
      tags:
      - auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the access token using a refresh token
      parameters:
      - description: Refresh token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/internal_handler.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/ua_services_user-service_internal_service.RefreshTokenResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Refresh access token
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ua_services_user-service_internal_service.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/ua_services_user-service_internal_service.RegisterResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Register a new user
      tags:
      - auth
  /api/v1/users/achievements:
    get:
      description: Get all achievements unlocked by the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/ua_services_user-service_internal_service.AchievementsResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Get user achievements
      tags:
      - users
  /api/v1/users/avatar:
    post:
      consumes:
      - multipart/form-data
      description: Upload user avatar image (placeholder implementation)
      parameters:
      - description: Avatar image file
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Upload avatar
      tags:
      - users
  /api/v1/users/change-password:
    post:
      consumes:
      - application/json
      description: Change the current user's password
      parameters:
      - description: Password change data
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/ua_services_user-service_internal_service.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Change password
      tags:
      - users
  /api/v1/users/profile:
    get:
      description: Get the current user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/ua_services_user-service_internal_service.UserProfileResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the current user's profile information
      parameters:
      - description: Profile update data
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/ua_services_user-service_internal_service.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/ua_services_user-service_internal_service.UserProfileResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - users
  /api/v1/users/stats:
    get:
      description: Get detailed statistics for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/ua_services_user-service_internal_service.UserStatsResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Get user statistics
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
