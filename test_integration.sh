#!/bin/bash

# Integration test script for InitializeGame and PerformMulligan
set -e

echo "=== Union Arena Game Battle Service Integration Test ==="

# Test configuration
BASE_URL="http://localhost:8004/api/v1"

# Use real JWT tokens and player IDs generated by generate_test_token.go
PLAYER1_ID="6ddf9f14-e2ed-4166-890c-f45757370824"
PLAYER1_TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNmRkZjlmMTQtZTJlZC00MTY2LTg5MGMtZjQ1NTc1MzcwODI0IiwidXNlcm5hbWUiOiJ0ZXN0X3BsYXllcl8xIiwiaXNzIjoidWEtZ2FtZSIsInN1YiI6IjZkZGY5ZjE0LWUyZWQtNDE2Ni04OTBjLWY0NTc1NzM3MDgyNCIsImV4cCI6MTc1NTA1OTM5NiwibmJmIjoxNzU1MDU4NDk2LCJpYXQiOjE3NTUwNTg0OTZ9.0SCQHJbc20tveSBi1ZPFCW2CI6mJe58vJeAZhG2d8wY"

PLAYER2_ID="043ee8a4-7a17-448c-b241-4b2fa4d5a6f6"
PLAYER2_TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMDQzZWU4YTQtN2ExNy00NDhjLWIyNDEtNGIyZmE0ZDVhNmY2IiwidXNlcm5hbWUiOiJ0ZXN0X3BsYXllcl8yIiwiaXNzIjoidWEtZ2FtZSIsInN1YiI6IjA0M2VlOGE0LTdhMTctNDQ4Yy1iMjQxLTRiMmZhNGQ1YTZmNiIsImV4cCI6MTc1NTA1OTM5NiwibmJmIjoxNzU1MDU4NDk2LCJpYXQiOjE3NTUwNTg0OTZ9.fOMM7T9gnQdG_p7f-AJI7Y0GHXa1AEk0E8gwdoKqdEk"

echo "Player 1 ID: $PLAYER1_ID"
echo "Player 2 ID: $PLAYER2_ID"

# Create minimal test deck (10 cards for testing to avoid curl argument limit)
create_test_deck() {
    echo '[
        {"id":"card-001","card_number":"TEST-001","name":"Test Card 1","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]},
        {"id":"card-002","card_number":"TEST-002","name":"Test Card 2","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]},
        {"id":"card-003","card_number":"TEST-003","name":"Test Card 3","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]},
        {"id":"card-004","card_number":"TEST-004","name":"Test Card 4","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]},
        {"id":"card-005","card_number":"TEST-005","name":"Test Card 5","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]},
        {"id":"card-006","card_number":"TEST-006","name":"Test Card 6","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]},
        {"id":"card-007","card_number":"TEST-007","name":"Test Card 7","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]},
        {"id":"card-008","card_number":"TEST-008","name":"Test Card 8","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]},
        {"id":"card-009","card_number":"TEST-009","name":"Test Card 9","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]},
        {"id":"card-010","card_number":"TEST-010","name":"Test Card 10","card_type":"CHARACTER","work_code":"TEST","bp":1000,"ap_cost":1,"energy_cost":{"colorless":1},"rarity":"C","characteristics":["Test"],"effect_text":"","trigger_effect":"nil","keywords":[]}
    ]'
}

DECK=$(create_test_deck)

# Test 1: Create Game (InitializeGame)
echo ""
echo "=== Test 1: Creating Game (Testing InitializeGame) ==="

CREATE_RESPONSE=$(curl -s -X POST "$BASE_URL/games" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $PLAYER1_TOKEN" \
  -d "{
    \"player1_id\": \"$PLAYER1_ID\",
    \"player2_id\": \"$PLAYER2_ID\",
    \"game_mode\": \"CASUAL\",
    \"player1_deck\": $DECK,
    \"player2_deck\": $DECK
  }" || echo "ERROR: Failed to create game")

echo "Create Game Response:"
echo "$CREATE_RESPONSE"

# Extract game ID from response
if echo "$CREATE_RESPONSE" | grep -q "id"; then
    GAME_ID=$(echo "$CREATE_RESPONSE" | grep -o '"id":"[^"]*"' | head -1 | cut -d'"' -f4)
    echo ""
    echo "✅ Game created successfully with ID: $GAME_ID"
else
    echo "❌ Failed to create game"
    echo "Response: $CREATE_RESPONSE"
    exit 1
fi

# Test 2: Get game state after initialization
echo ""
echo "=== Test 2: Getting Game State After Initialization ==="

GAME_STATE_RESPONSE=$(curl -s -X GET "$BASE_URL/games/$GAME_ID" \
  -H "Authorization: Bearer $PLAYER1_TOKEN" || echo "ERROR: Failed to get game state")

echo "Initial Game State Response:"
echo "$GAME_STATE_RESPONSE" | head -20
echo "..."

# Test 3: Player 1 Mulligan Decision
echo ""
echo "=== Test 3: Player 1 Mulligan Decision (Testing PerformMulligan) ==="

MULLIGAN1_RESPONSE=$(curl -s -X POST "$BASE_URL/games/$GAME_ID/mulligan" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $PLAYER1_TOKEN" \
  -d "{
    \"mulligan\": true
  }" || echo "ERROR: Failed to perform mulligan for player 1")

echo "Player 1 Mulligan Response:"
echo "$MULLIGAN1_RESPONSE"

if echo "$MULLIGAN1_RESPONSE" | grep -q "success\|completed"; then
    echo "✅ Player 1 mulligan completed successfully"
else
    echo "⚠️  Player 1 mulligan response unclear"
fi

# Test 4: Player 2 Mulligan Decision  
echo ""
echo "=== Test 4: Player 2 Mulligan Decision ==="

MULLIGAN2_RESPONSE=$(curl -s -X POST "$BASE_URL/games/$GAME_ID/mulligan" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $PLAYER2_TOKEN" \
  -d "{
    \"mulligan\": false
  }" || echo "ERROR: Failed to perform mulligan for player 2")

echo "Player 2 Mulligan Response:"
echo "$MULLIGAN2_RESPONSE"

if echo "$MULLIGAN2_RESPONSE" | grep -q "success\|completed"; then
    echo "✅ Player 2 mulligan completed successfully"
else
    echo "⚠️  Player 2 mulligan response unclear"
fi

# Test 5: Get final game state
echo ""
echo "=== Test 5: Getting Final Game State After Both Mulligans ==="

FINAL_STATE_RESPONSE=$(curl -s -X GET "$BASE_URL/games/$GAME_ID" \
  -H "Authorization: Bearer $PLAYER1_TOKEN" || echo "ERROR: Failed to get final game state")

echo "Final Game State Response:"
echo "$FINAL_STATE_RESPONSE" | head -30
echo "..."

# Test 6: Check if life area was set up automatically
if echo "$FINAL_STATE_RESPONSE" | grep -q "life_area_setup.*true"; then
    echo "✅ Life area was automatically set up after both players completed mulligan"
else
    echo "⚠️  Life area setup status unclear"
fi

echo ""
echo "=== Integration Test Completed ==="
echo "Game ID for database verification: $GAME_ID"